
procedure TReflectionKeyboard.TypeKey(B: Byte);
begin
  if (B = 13) then
    B := 10;
  KeyDown(B);
  Wait(10 + Random(50));
  KeyUp(B);
end;

procedure TReflectionKeyboard.TypeSend(Text: String; Send: Boolean = True);
var
  I: Integer;
begin
  for I := 1 to Length(Text) do
  begin
    SendKeys(Text[I], 40 + Random(40), 15 + Random(30));
    Wait(20 + Random(40));
  end;
  if Send then
    Reflect.Keyboard.TypeKey(Vk_Enter);
end;

procedure TReflectionKeyboard.SendArrowWait(Key: Byte; WaitTime: Integer);
var
  KeyCode : integer;
begin;
  if not InRange(Key,0,3) then
    Reflect.Logger.Warn('Key is not in range')
  else
  begin
    case Key of
      0 : Keycode := (vk_up);
      1 : Keycode := (vk_right);
      2 : Keycode := (vk_down);
      3 : Keycode := (vk_left);
    end;
    KeyDown(KeyCode);
    Wait(WaitTime);
    KeyUp(KeyCode);
  end;
end;
